/* This is a universal selector. It applies the following styles to all HTML elements on the page. */
* {
    margin: 0; /* Removes the default margin from all elements. */
    padding: 0; /* Removes the default padding from all elements. */
    font-family: 'poppins', sans-serif; /* Sets the default font family to 'Poppins', with a fallback to any sans-serif font if 'Poppins' isn't available. */
    box-sizing: border-box; /* Changes the default CSS box model to include padding and border in the element's total width and height. */
  }
  
  /* This class selector targets any HTML element with the class 'container'. */
  .container {
    width: 100%; /* Sets the width of the container to 100% of the parent element's width. */
    min-height: 100vh; /* Sets the minimum height of the container to 100% of the viewport height. */
    background: linear-gradient(155deg, silver, gold); /* Creates a linear gradient background from red to blue at a 155-degree angle. */
  }
/* The .tudo-app class styles a container that likely holds a to-do application interface. */

/* This sets the width of the container to 100% of the parent element's width. */
.tudo-app {
    width: 100%;
    
    /* This sets the maximum width of the container to 540 pixels. */
    max-width: 540px;
    
    /* This sets the background color of the container to white. */
    background: #fff;
    
    /* This sets the top and bottom margin to 100 pixels and 20 pixels respectively, and centers the container horizontally. */
    margin: 100px auto 20px;
    
    /* This adds padding inside the container: 40 pixels on the top, 30 pixels on the sides, and 70 pixels on the bottom. */
    padding: 40px 30px 70px;
    
    /* This rounds the corners of the container with a radius of 10 pixels. */
    border-radius: 10px;
}

/* The .tudo-app h2 styles the h2 headings within the .tudo-app container. */

/* This sets the text color of the h2 headings to a dark blue. */
.tudo-app h2 {
    color: #002765;
    
    /* This displays the h2 elements as a flex container, which allows for flexible layouts and alignment of child elements. */
    display: flex;
    
    /* This vertically aligns the child elements (like text and images) in the center of the h2 element. */
    align-items: center;
    
    /* This sets the bottom margin of the h2 headings to 20 pixels. */
    margin-bottom: 20px; 
}

/* The .tudo-app h2 img styles images that are direct children of h2 elements within the .tudo-app container. */

/* This sets the width of the images to 30 pixels. */
.tudo-app h2 img {
    width: 30px;
    
    /* This sets the left margin of the images to 10 pixels, creating space between the image and any preceding content. */
    margin-left: 10px;
}.row{
    display: flex; /* Establishes a flex container for better positioning of child elements */
    align-items: center; /* Vertically centers the child elements within the flex container */
    justify-content: space-between; /* Distributes extra space in the container to space out child elements evenly */
    background: #edeef0; /* Sets a light grey background color for the row */
    border-radius: 30px; /* Rounds the corners of the row's border */
    padding-left: 20px; /* Adds padding to the left side of the row */
    margin-bottom: 25px; /* Adds space below the row */
}

input{
    flex: 1; /* Allows the input to grow and fill the space in a flex container */
    border: none; /* Removes the default border from the input */
    outline: none; /* Removes the default focus outline from the input */
    background: transparent; /* Makes the input's background transparent */
    padding: 10px; /* Adds padding inside the input on all sides */
    font-weight: 14px; /* This is likely a mistake, as font-weight should be a number like 400 (normal) or 700 (bold) */
}
button {
    border: none; /* Removes any border from the button, so it appears without an outline. */
    outline: none; /* Removes the focus outline that browsers might add when you click the button. */
    padding: 16px 50px; /* Adds space inside the button: 16 pixels on top and bottom, 50 pixels on left and right. */
    background: #ff5945; /* Sets the background color of the button to a reddish-orange shade. */
    color: #fff; /* Sets the text color inside the button to white. */
    font-size: 16px; /* Sets the size of the text inside the button to 16 pixels. */
    cursor: pointer; /* Changes the mouse cursor to a pointer when it's over the button, indicating it's clickable. */
    border-radius: 40px; /* Rounds the corners of the button to make it look like a pill shape. */
}
ul li {
    list-style: none; /* This removes the default bullets or numbers from the list items. */
    font-size: 17px; /* This sets the size of the text within the list items to 17 pixels. */
    padding: 12px 8px 12px 50px; /* This adds space around the content inside the list items. Specifically, 12 pixels on the top and bottom, 8 pixels on the right, and 50 pixels on the left. */
    user-select: none; /* This prevents the text inside the list items from being selectable by the user. */
    cursor: pointer; /* This changes the mouse cursor to a pointer icon when it hovers over the list items, indicating that they are clickable. */
    position: relative; /* This sets the position of the list items relative to their normal position, which allows you to position child elements absolutely within. */
}

ul li::before {
    content: ''; /* This is necessary for the ::before pseudo-element to work. It's often used to add decorative content, but here it's empty. */
    position: absolute; /* This positions the pseudo-element absolutely relative to its parent li, which must have a position value other than static. */
    height: 28px; /* This sets the height of the pseudo-element to 28 pixels. */
    width: 28px; /* This sets the width of the pseudo-element to 28 pixels. */
    border-radius: 50%; /* This makes the pseudo-element circular. */
    background-image: url(/images/unchecked.png); /* This sets the background image of the pseudo-element to an 'unchecked' icon. */
    background-size: cover; /* This ensures that the background image covers the entire area of the pseudo-element, without being stretched or squished. */
    background-position: center; /* This centers the background image within the pseudo-element. */
    top: 12px; /* This positions the top edge of the pseudo-element 12 pixels from the top of the parent li. */
    left: 8px; /* This positions the left edge of the pseudo-element 8 pixels from the left of the parent li. */
}
/* Styles for list items that have been marked as checked */
ul li.checked {
    color: #555; /* Changes the text color to a medium gray */
    text-decoration: line-through; /* Adds a line through the text to signify completion */
}

/* Styles for the custom checkbox when the list item is checked */
ul li.checked::before {
    background-image: url(/images/checked.png); /* Changes the background image to a 'checked' icon */
}

/* Styles for a span element inside a list item */
ul li span {
    position: absolute; /* Positions the span absolutely within the list item */
    right: 0; /* Aligns the span to the right edge of the list item */
    top: 5px; /* Positions the span 5 pixels from the top of the list item */
    width: 40px; /* Sets the width of the span to 40 pixels */
    height: 40px; /* Sets the height of the span to 40 pixels */
    font-size: 22px; /* Sets the font size within the span to 22 pixels */
    color: #555; /* Sets the text color within the span to medium gray */
    line-height: 40px; /* Centers the text vertically within the span */
    text-align: center; /* Centers the text horizontally within the span */
    border-radius: 50%; /* Makes the span circular */
}

/* Hover effect for the span element */
ul li span:hover {
    background: #edeef0; /* Changes the background color of the span to a light gray when hovered over */
}
